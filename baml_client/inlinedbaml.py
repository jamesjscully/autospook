###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomGPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4o, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}",
    "exa_api.baml": "// BAML structure for Exa Search API integration\n\nclass ExaResult {\n    id string\n    title string\n    url string\n    score float?\n    published_date string?\n    text string?\n}\n\nclass ExaSearchResults {\n    query string\n    num_results int\n    results ExaResult[]\n}\n\n// Function to summarize Exa search results\nfunction SummarizeExa(question: string, search_results: ExaSearchResults) -> string {\n    client CustomGPT4oMini\n    prompt #\"\n        You are a helpful research assistant. Based on the Exa search results provided, answer the following question with a clear, concise, and informative response.\n\n        Question: {{ question }}\n\n        Search Results from Exa:\n        Query: {{ search_results.query }}\n        Total Results: {{ search_results.num_results }}\n\n        {% for result in search_results.results %}\n        Result {{ loop.index }}:\n        - Title: {{ result.title }}\n        - URL: {{ result.url }}\n        {% if result.score %}- Relevance Score: {{ result.score }}{% endif %}\n        {% if result.published_date %}- Published: {{ result.published_date }}{% endif %}\n        {% if result.text %}- Content: {{ result.text }}{% endif %}\n\n        {% endfor %}\n\n        Please provide a comprehensive answer to the question based on the search results above. Focus on accuracy and relevance. If the search results don't contain enough information to fully answer the question, mention what information is available and what might be missing.\n    \"#\n}",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.90.1\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
    "prompts.baml": "// ─── DOMAIN TYPES ─────────────────────────────────────────────\n\nclass Stepback {\n  expanded_context string @description(\"One-paragraph expansion of the raw context\")\n}\n\nenum Criticality {\n  SECURITY_CRITICAL\n  CONTEXTUAL\n}\n\nclass Question {\n  text string\n  criticality Criticality\n}\n\nenum QuestionLabel {\n  OPEN\n  CLOSED\n  UNANSWERABLE\n}\n\nclass EvidenceSnippet {\n  title string\n  url string\n  snippet string\n  published_date string?\n}\n\nclass QuestionStatus {\n  question Question\n  label QuestionLabel\n  rationale string\n  evidence EvidenceSnippet[]?\n}\n\nenum TopicCompletion {\n  OPEN\n  SATISFIED\n  UNSATISFIABLE\n}\n\nclass TopicStatus {\n  topic string\n  completion TopicCompletion\n  rationale string\n}\n\nclass HtmlReport {\n  html string @description(\"Complete HTML fragment for the final report\")\n}\n\n\n// ─── FUNCTION DEFINITIONS ─────────────────────────────────────\n\nfunction InitialStepback(\n  target_name: string,\n  target_context: string\n) -> Stepback {\n  client CustomSonnet\n  prompt #\"\n    You are an OSINT step-back analyst.  Expand the user-supplied context,\n    flagging the security dimensions that most affect risk when engaging\n    with the target.\n    Focus on topics that can be investigated online through public data.\n    Present the conclusions in an unbiased, objective manner that does not\n    make assumptions about the conclusions of the investigation.\n    Only set the scope, focus, and security dimensions of the investigation.\n\n    Target Name: {{ target_name }}\n    Raw Context: {{ target_context }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction GenerateTopics(expanded_context: string) -> string[] {\n  client CustomGPT4o\n  prompt #\"\n    You are a senior intelligence analyst with expertise in planning open-source intel gathering operations.\n    The context below describes the scope and the most important security dimensions of our investigation.\n    {{ expanded_context }}\n    \n    For DEMO purposes, generate exactly 2-3 focused investigation topics that cover the most essential areas.\n    Prioritize the most critical security-relevant topics only.\n    \n    Example topics might include:\n    - Basic identifying information and background\n    - Online presence and digital footprint\n    - Professional/business associations\n    \n    Each topic should be a single sentence that describes the area of investigation.\n    Keep the scope limited for demonstration purposes.\n    \n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction GenerateQuestions(\n  topic: string,\n  expanded_context: string\n) -> Question[] {\n  client CustomGPT4o\n  prompt #\"\n    You are an AI who is tasked with generating questions for an OSINT investigation.\n    \n    For DEMO purposes, generate exactly 1-2 focused questions per topic that can be answered through public data sources.\n    Focus on the most essential questions only - quality over quantity.\n    Each question will be subsequently broken down into web-search strings, so keep this in mind.\n\n    Topic: {{ topic }}\n    Context: {{ expanded_context }}\n\n    Be specific about who the target is because the expanded context will not be used to generate queries from questions.\n    For example, if the topic is \"Online presence\", and the target is \"John Doe\" you might ask:\n    \"What social media accounts are associated with John Doe?\"\n\n    Generate only the most critical 1-2 questions whose answers would provide the core information for this topic.\n    Tag each as SECURITY_CRITICAL or CONTEXTUAL.\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction GenerateQueries(\n  question: Question,\n  expanded_context: string,\n  topic: string,\n  previous_queries: string[]?\n) -> string[] {\n  client CustomFast\n  prompt #\"\n    Investigation Context: {{ expanded_context }}\n    \n    Current Topic: {{ topic }}\n    \n    Question: {{ question.text }}\n    Question Criticality: {{ question.criticality }}\n    \n    {% if previous_queries %}\n    Previous queries for this question: {{ previous_queries | join(', ') }}\n    {% endif %}\n\n    For DEMO purposes, generate exactly 1-2 focused web-search strings (not 3) that are most likely to surface \n    primary sources to answer this question. Consider:\n    \n    - The overall investigation context and security focus\n    - The specific topic being researched\n    - The criticality level of this question\n    - Avoid duplicating previous search approaches\n    - Target the most authoritative and likely sources\n    - Use specific terminology relevant to the context\n    \n    Quality over quantity - generate only the most effective search queries.\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction EvaluateQuestion(\n  question: Question,\n  evidence: EvidenceSnippet[]?,\n  expanded_context: string,\n  topic: string\n) -> QuestionStatus {\n  client CustomGPT4oMini\n  prompt #\"\n    Investigation Context: {{ expanded_context }}\n    \n    Current Topic: {{ topic }}\n    \n    Question: {{ question.text }}\n    Question Criticality: {{ question.criticality }}\n    \n    Evidence Collected: {{ evidence }}\n\n    Evaluate whether this question can be considered answered based on the evidence collected.\n    Consider:\n    \n    - The overall investigation context and what we're trying to determine\n    - The specific topic this question relates to\n    - The criticality level - SECURITY_CRITICAL questions need stronger evidence\n    - Quality and reliability of the evidence sources\n    - Whether the evidence directly addresses the question\n    \n    Return OPEN, CLOSED, or UNANSWERABLE with a clear rationale explaining your decision.\n    \n    - OPEN: More evidence needed to adequately answer the question\n    - CLOSED: Sufficient evidence exists to answer the question  \n    - UNANSWERABLE: Question cannot be answered through available public sources\n    \n    If CLOSED, include the most relevant evidence snippets that support the answer.\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction EvaluateTopic(\n  topic: string,\n  question_statuses: QuestionStatus[]\n) -> TopicStatus {\n  client CustomGPT4oMini\n  prompt #\"\n    Topic: {{ topic }}\n    Status objects: {{ question_statuses }}\n\n    If every SECURITY_CRITICAL question is CLOSED -> SATISFIED.\n    If any SECURITY_CRITICAL is OPEN -> OPEN.\n    If all SECURITY_CRITICAL are UNANSWERABLE -> UNSATISFIABLE.\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction WriteReport(\n  expanded_context: string,\n  evidence_by_topic: map<string, EvidenceSnippet[]>\n) -> HtmlReport {\n  client CustomSonnet\n  prompt #\"\n    Draft an executive-level OSINT security report in clean HTML format.\n    \n    Context: {{ expanded_context }}\n    Evidence: {{ evidence_by_topic }}\n\n    Requirements:\n    • Use <h2> for main sections and <h3> for subsections\n    • Use <p> tags for paragraphs\n    • Use <ul> and <li> for lists\n    • Embed each source as <a href=\"URL\" target=\"_blank\" class=\"text-blue-400 hover:text-blue-300\">Title</a>\n    • Use <strong> for emphasis\n    • Structure the report with clear sections: Executive Summary, Findings by Topic, Sources, Risk Assessment\n    • Finish with a concise risk synopsis section\n    • Do not include <html>, <head>, or <body> tags - just the content\n    • Ensure all HTML is properly formatted and closed\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction AssessRisk(report_html: string) -> string {\n  client CustomGPT4oMini\n  prompt #\"\n    Analyze this OSINT security report and assess the overall risk level:\n\n    {{ report_html }}\n\n    Based on the findings in the report, determine the security risk level.\n    Consider factors such as:\n    - Security vulnerabilities or concerns identified\n    - Reputation and credibility issues\n    - Potential for fraud, deception, or malicious activity\n    - Quality and reliability of available information\n    - Any red flags or concerning patterns\n\n    Return only one of: \"Low\", \"Medium\", or \"High\"\n    \n    - Low: Minimal security concerns, generally trustworthy\n    - Medium: Some concerns identified, proceed with caution\n    - High: Significant security risks or red flags identified\n\n    {{ ctx.output_format }}\n  \"#\n}",
    "test.baml": "test test_stepback {\n  functions [InitialStepback]\n  args {\n    target_name \"Ali Khaledi Nasab\"\n    target_context \"I am interested in buying software from his startup company\n    for intelligence gathering. I want to know if I can trust him with our data.\"\n  }\n}",
}

def get_baml_files():
    return file_map